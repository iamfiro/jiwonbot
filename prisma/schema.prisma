// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model GuildBotLanguage {
  id       Int       @id @default(autoincrement())
  guildId  String    @unique
  language String    @default("en")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("languages")
}

model UserGameTier {
  id     Int    @id @default(autoincrement())
  userId String  // Discord 사용자 ID
  game   String  // 'Valorant' 또는 'League of Legends'
  tier   String  // 사용자의 티어 (예: 'Gold 2', 'Diamond 1')

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([userId, game])  // 한 사용자는 게임당 하나의 티어만 가질 수 있음
  @@map("user_game_tiers")
}

model ScoreBoard {
  id          String   @id @default(cuid())
  name        String
  redName     String
  blueName    String
  redScore    Int      @default(0)
  blueScore   Int      @default(0)
  messageId   String   @unique
  creatorId   String
  guildId     String
  isFinished  Boolean  @default(false)
  winner      String?  // 'red', 'blue', 'tie'
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("scoreboards")
}